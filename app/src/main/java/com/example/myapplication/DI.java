package com.example.myapplication;

import com.example.myapplication.data.FirebaseUserService;
import com.example.myapplication.data.repository.CompanyQueueRepository;
import com.example.myapplication.data.repository.CompanyUserRepository;
import com.example.myapplication.data.repository.ProfileRepository;
import com.example.myapplication.data.repository.QueueRepository;
import com.example.myapplication.domain.usecase.companyQueue.company.AddCompanySnapshotUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.CheckCompanyExistUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.CreateCompanyDocumentUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.DeleteCompanyUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.DeleteEmployeeFromCompanyUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.GetCompaniesLogosUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.GetCompanyLogoUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.GetCompanyModelUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.GetCompanyUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.GetSingleCompanyUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.UpdateApprovedUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.UpdateCompanyDataUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.UpdateRoleUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.UploadCompanyBytesUseCase;
import com.example.myapplication.domain.usecase.companyQueue.company.UploadCompanyLogoToFireStorageUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.AddEmployeeSnapshotUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.AddEmployeeUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.AddListEmployeesToQueue;
import com.example.myapplication.domain.usecase.companyQueue.employees.DeleteEmployeeFromQueueUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.GetAdminsUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.GetEmployeePhotoUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.GetEmployeeQrCodeUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.GetEmployeesUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.GetSingleEmployeeUseCase;
import com.example.myapplication.domain.usecase.companyQueue.employees.RemoveAdminFromAllQueuesAsWorkerUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.AddCompanyQueueParticipantsSizeSnapshot;
import com.example.myapplication.domain.usecase.companyQueue.queues.AddEmployeeToListQueues;
import com.example.myapplication.domain.usecase.companyQueue.queues.CreateCompanyQueueDocumentUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.DeleteCompanyQueueUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.DeleteEmployeeFromAllQueuesUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetCompaniesQueuesUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetCompanyQueueParticipantsListUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetQueueByIdUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetQueueNameAndLocationById;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetQueueWorkersListUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.GetQueuesParticipantSizeAndNameUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.NextCompanyQueueParticipantUpdateListUseCase;
import com.example.myapplication.domain.usecase.companyQueue.queues.UpdateQueueDataUseCase;
import com.example.myapplication.domain.usecase.profile.AddEmployeeRoleUseCase;
import com.example.myapplication.domain.usecase.profile.AddSnapshotProfileUseCase;
import com.example.myapplication.domain.usecase.profile.ChangePasswordUseCase;
import com.example.myapplication.domain.usecase.profile.CheckAuthenticationUseCase;
import com.example.myapplication.domain.usecase.profile.CheckBooleanDataUseCase;
import com.example.myapplication.domain.usecase.profile.CheckPasswordUseCase;
import com.example.myapplication.domain.usecase.profile.CheckUserIdUseCase;
import com.example.myapplication.domain.usecase.profile.CheckVerificationUseCase;
import com.example.myapplication.domain.usecase.profile.CreateAccountUseCase;
import com.example.myapplication.domain.usecase.profile.DeleteAccountUseCase;
import com.example.myapplication.domain.usecase.profile.DeleteActiveQueueUseCase;
import com.example.myapplication.domain.usecase.profile.DeleteEmployeeRoleUseCase;
import com.example.myapplication.domain.usecase.profile.GetActiveQueuesByEmployeeIdUseCase;
import com.example.myapplication.domain.usecase.profile.GetActiveQueuesUseCase;
import com.example.myapplication.domain.usecase.profile.GetBackgroundImageUseCase;
import com.example.myapplication.domain.usecase.profile.GetEmployeeRolesUseCase;
import com.example.myapplication.domain.usecase.profile.GetHistoryUseCase;
import com.example.myapplication.domain.usecase.profile.GetProfileEditUseCase;
import com.example.myapplication.domain.usecase.profile.GetProfileImageUseCase;
import com.example.myapplication.domain.usecase.profile.GetUserBooleanDataUseCase;
import com.example.myapplication.domain.usecase.profile.GetUserEmailAndNameDataUseCase;
import com.example.myapplication.domain.usecase.profile.IsEmployeeUseCase;
import com.example.myapplication.domain.usecase.profile.IsNullUseCase;
import com.example.myapplication.domain.usecase.profile.SendResetPasswordEmailUseCase;
import com.example.myapplication.domain.usecase.profile.SendVerificationEmailUseCase;
import com.example.myapplication.domain.usecase.profile.SignInAnonymouslyUseCase;
import com.example.myapplication.domain.usecase.profile.SignInWithEmailAndPasswordUseCase;
import com.example.myapplication.domain.usecase.profile.SignOutUseCase;
import com.example.myapplication.domain.usecase.profile.UpdateEmailFieldUseCase;
import com.example.myapplication.domain.usecase.profile.UpdateEmployeeRoleUseCase;
import com.example.myapplication.domain.usecase.profile.UpdateOwnQueueUseCase;
import com.example.myapplication.domain.usecase.profile.UpdateParticipateInQueueUseCase;
import com.example.myapplication.domain.usecase.profile.UpdateUserDataUseCase;
import com.example.myapplication.domain.usecase.profile.UploadBackgroundImageUseCase;
import com.example.myapplication.domain.usecase.profile.UploadProfileImageToFireStorageUseCase;
import com.example.myapplication.domain.usecase.profile.VerifyBeforeUpdateEmailUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.AddPeopleBeforeYouSnapshot;
import com.example.myapplication.domain.usecase.queue.usecase.AddQueueSizeModelSnapShot;
import com.example.myapplication.domain.usecase.queue.usecase.AddQueueToHistoryUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.AddSnapshotQueueUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.AddToParticipantsListUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.CheckParticipantIndexUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.ContinueQueueUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.CreateQueueDocumentUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.DeleteQrCodeUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.FinishQueueUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetOwnQueueData;
import com.example.myapplication.domain.usecase.queue.usecase.GetParticipantsListUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetParticipateInQueueData;
import com.example.myapplication.domain.usecase.queue.usecase.GetQrCodeImageUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQrCodePdfUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueByAuthorUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueByParticipantIdUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueByQueueIdUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueInProgressModelUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueMidTimeModel;
import com.example.myapplication.domain.usecase.queue.usecase.GetQueueTimeModelUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.GetTimeProgressPausedUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.NextParticipantUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.OnContainParticipantUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.OnParticipantLeftUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.OnPausedUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.PauseQueueUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.RemoveParticipantById;
import com.example.myapplication.domain.usecase.queue.usecase.UpdateInProgressUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.UpdateMidTimeUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.UploadBytesToFireStorageUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.UploadFileToFireStorageUseCase;
import com.example.myapplication.domain.usecase.queue.usecase.onParticipantServedUseCase;

public class DI {
    public static FirebaseUserService service = FirebaseUserService.getInstance();
    public static QueueRepository queueRepository = new QueueRepository();
    public static ProfileRepository profileRepository = new ProfileRepository();
    public static CompanyUserRepository companyUserRepository = new CompanyUserRepository();
    public static CompanyQueueRepository companyQueueRepository = new CompanyQueueRepository();

    //COMPANY QUEUE USECASE
    public static AddEmployeeToListQueues addEmployeeToListQueues = new AddEmployeeToListQueues();
    public static RemoveAdminFromAllQueuesAsWorkerUseCase removeAdminFromAllQueuesAsWorkerUseCase = new RemoveAdminFromAllQueuesAsWorkerUseCase();
    public static AddListEmployeesToQueue addListEmployeesToQueue = new AddListEmployeesToQueue();
    public static DeleteEmployeeFromAllQueuesUseCase deleteEmployeeFromAllQueuesUseCase = new DeleteEmployeeFromAllQueuesUseCase();
    public static DeleteEmployeeFromQueueUseCase deleteEmployeeFromQueueUseCase = new DeleteEmployeeFromQueueUseCase();
    public static GetQueuesParticipantSizeAndNameUseCase getQueuesParticipantSizeAndNameUseCase = new GetQueuesParticipantSizeAndNameUseCase();
    public static DeleteCompanyQueueUseCase deleteCompanyQueueUseCase = new DeleteCompanyQueueUseCase();
    public static CreateCompanyQueueDocumentUseCase createCompanyQueueDocumentUseCase = new CreateCompanyQueueDocumentUseCase();
    public static GetCompaniesQueuesUseCase getCompaniesQueuesUseCase = new GetCompaniesQueuesUseCase();
    public static GetQueueWorkersListUseCase getQueueWorkersListUseCase = new GetQueueWorkersListUseCase();
    public static GetQueueByIdUseCase getQueueByIdUseCase = new GetQueueByIdUseCase();
    public static NextCompanyQueueParticipantUpdateListUseCase nextParticipantUseCompanyUseCase = new NextCompanyQueueParticipantUpdateListUseCase();
    public static GetCompanyQueueParticipantsListUseCase getCompanyQueueParticipantsListUseCase = new GetCompanyQueueParticipantsListUseCase();
    public static AddCompanyQueueParticipantsSizeSnapshot addCompanyQueueParticipantsSizeSnapshot = new AddCompanyQueueParticipantsSizeSnapshot();
    public static GetQueueNameAndLocationById getQueueNameAndLocationById = new GetQueueNameAndLocationById();
    public static GetAdminsUseCase getAdminsUseCase = new GetAdminsUseCase();
    public static UpdateQueueDataUseCase updateQueueDataUseCase = new UpdateQueueDataUseCase();

    //COMPANY USER USECASE
    public static GetSingleEmployeeUseCase getSingleEmployeeUseCase = new GetSingleEmployeeUseCase();
    public static DeleteEmployeeFromCompanyUseCase deleteEmployeeFromCompanyUseCase = new DeleteEmployeeFromCompanyUseCase();
    public static UpdateApprovedUseCase updateApprovedUseCase = new UpdateApprovedUseCase();
    public static GetEmployeePhotoUseCase getEmployeePhotoUseCase = new GetEmployeePhotoUseCase();
    public static GetCompaniesLogosUseCase getCompaniesLogosUseCase = new GetCompaniesLogosUseCase();
    public static AddEmployeeSnapshotUseCase addEmployeeSnapshotUseCase = new AddEmployeeSnapshotUseCase();
    public static AddCompanySnapshotUseCase addCompanySnapshotUseCase = new AddCompanySnapshotUseCase();
    public static UpdateRoleUseCase updateRoleUseCase = new UpdateRoleUseCase();
    public static UploadCompanyBytesUseCase uploadCompanyBytesUseCase = new UploadCompanyBytesUseCase();
    public static CreateCompanyDocumentUseCase createCompanyDocumentUseCase = new CreateCompanyDocumentUseCase();
    public static CheckCompanyExistUseCase checkCompanyExistUseCase = new CheckCompanyExistUseCase();
    public static GetCompanyUseCase getCompanyUseCase = new GetCompanyUseCase();
    public static GetSingleCompanyUseCase getSingleCompanyUseCase = new GetSingleCompanyUseCase();
    public static GetEmployeesUseCase getEmployeesUseCase = new GetEmployeesUseCase();
    public static GetEmployeeQrCodeUseCase getEmployeeQrCodeUseCase = new GetEmployeeQrCodeUseCase();
    public static AddEmployeeUseCase addEmployeeUseCase = new AddEmployeeUseCase();
    public static UploadCompanyLogoToFireStorageUseCase uploadCompanyLogoToFireStorageUseCase = new UploadCompanyLogoToFireStorageUseCase();
    public static GetCompanyLogoUseCase getCompanyLogoUseCase = new GetCompanyLogoUseCase();
    public static UpdateCompanyDataUseCase updateCompanyDataUseCase = new UpdateCompanyDataUseCase();
    public static GetCompanyModelUseCase getCompanyModelUseCase = new GetCompanyModelUseCase();
    public static DeleteCompanyUseCase deleteCompanyUseCase = new DeleteCompanyUseCase();

    //PROFILE USECASE
    public static GetActiveQueuesByEmployeeIdUseCase getActiveQueuesByEmployeeIdUseCase = new GetActiveQueuesByEmployeeIdUseCase();
    public static UpdateEmployeeRoleUseCase updateEmployeeRoleUseCase = new UpdateEmployeeRoleUseCase();
    public static DeleteActiveQueueUseCase deleteActiveQueueUseCase = new DeleteActiveQueueUseCase();
    public static DeleteEmployeeRoleUseCase deleteEmployeeRoleUseCase = new DeleteEmployeeRoleUseCase();
    public static GetActiveQueuesUseCase getActiveQueuesUseCase = new GetActiveQueuesUseCase();
    public static GetEmployeeRolesUseCase getEmployeeRolesUseCase = new GetEmployeeRolesUseCase();
    public static IsEmployeeUseCase isEmployeeUseCase = new IsEmployeeUseCase();
    public static AddEmployeeRoleUseCase addEmployeeRoleUseCase = new AddEmployeeRoleUseCase();
    public static GetHistoryUseCase getHistoryUseCase = new GetHistoryUseCase();
    public static IsNullUseCase isNullUseCase = new IsNullUseCase();
    public static CheckPasswordUseCase checkPasswordUseCase = new CheckPasswordUseCase();
    public static UpdateParticipateInQueueUseCase updateParticipateInQueueUseCase = new UpdateParticipateInQueueUseCase();
    public static GetParticipateInQueueData getParticipateInQueueData = new GetParticipateInQueueData();
    public static GetOwnQueueData getOwnQueueData = new GetOwnQueueData();
    public static CheckBooleanDataUseCase checkBooleanDataUseCase = new CheckBooleanDataUseCase();
    public static GetUserBooleanDataUseCase getUserBooleanDataUseCase = new GetUserBooleanDataUseCase();
    public static UpdateOwnQueueUseCase updateOwnQueueUseCase = new UpdateOwnQueueUseCase();
    public static AddSnapshotProfileUseCase addSnapshotProfileUseCase = new AddSnapshotProfileUseCase();
    public static CheckVerificationUseCase checkVerificationUseCase = new CheckVerificationUseCase();
    public static GetUserEmailAndNameDataUseCase getUserEmailAndNameDataUseCase = new GetUserEmailAndNameDataUseCase();
    public static GetProfileImageUseCase getProfileImageUseCase = new GetProfileImageUseCase();
    public static GetProfileEditUseCase getProfileEditUseCase = new GetProfileEditUseCase();
    public static UpdateUserDataUseCase updateUserDataUseCase = new UpdateUserDataUseCase();
    public static UploadProfileImageToFireStorageUseCase uploadProfileImageToFireStorageUseCase = new UploadProfileImageToFireStorageUseCase();
    public static SignInWithEmailAndPasswordUseCase signInWithEmailAndPasswordUseCase = new SignInWithEmailAndPasswordUseCase();
    public static SendResetPasswordEmailUseCase sendResetPasswordEmailUseCase = new SendResetPasswordEmailUseCase();
    public static SignOutUseCase signOutUseCase = new SignOutUseCase();
    public static CreateAccountUseCase createAccountUseCase = new CreateAccountUseCase();
    public static SendVerificationEmailUseCase sendVerificationEmailUseCase = new SendVerificationEmailUseCase();
    public static DeleteAccountUseCase deleteAccountUseCase = new DeleteAccountUseCase();
    public static CheckAuthenticationUseCase checkAuthenticationUseCase = new CheckAuthenticationUseCase();
    public static UpdateEmailFieldUseCase updateEmailFieldUseCase = new UpdateEmailFieldUseCase();
    public static VerifyBeforeUpdateEmailUseCase verifyBeforeUpdateEmailUseCase = new VerifyBeforeUpdateEmailUseCase();
    public static ChangePasswordUseCase changePasswordUseCase = new ChangePasswordUseCase();
    public static UploadBackgroundImageUseCase uploadBackgroundImageUseCase = new UploadBackgroundImageUseCase();
    public static GetBackgroundImageUseCase getBackgroundImageUseCase = new GetBackgroundImageUseCase();

    //QUEUE USECASE
    public static AddQueueToHistoryUseCase addQueueToHistoryUseCase = new AddQueueToHistoryUseCase();
    public static DeleteQrCodeUseCase deleteQrCodeUseCase = new DeleteQrCodeUseCase();
    public static GetQueueMidTimeModel getQueueMidTimeModel = new GetQueueMidTimeModel();
    public static UpdateMidTimeUseCase updateMidTimeUseCase = new UpdateMidTimeUseCase();
    public static GetQueueInProgressModelUseCase getQueueInProgressModelUseCase = new GetQueueInProgressModelUseCase();
    public static CheckParticipantIndexUseCase checkParticipantIndexUseCase = new CheckParticipantIndexUseCase();
    public static AddPeopleBeforeYouSnapshot addPeopleBeforeYouSnapshot = new AddPeopleBeforeYouSnapshot();
    public static GetTimeProgressPausedUseCase getTimeProgressPausedUseCase = new GetTimeProgressPausedUseCase();
    public static OnPausedUseCase onPausedUseCase = new OnPausedUseCase();
    public static AddSnapshotQueueUseCase addSnapshotQueueUseCase = new AddSnapshotQueueUseCase();
    public static ContinueQueueUseCase continueQueueUseCase = new ContinueQueueUseCase();
    public static PauseQueueUseCase pauseQueueUseCase = new PauseQueueUseCase();
    public static onParticipantServedUseCase onParticipantServedUseCase = new onParticipantServedUseCase();
    public static UpdateInProgressUseCase updateInProgressUseCase = new UpdateInProgressUseCase();
    public static GetQueueTimeModelUseCase getQueueTimeModelUseCase = new GetQueueTimeModelUseCase();
    public static FinishQueueUseCase finishQueueUseCase = new FinishQueueUseCase();
    public static GetQueueByAuthorUseCase getQueueByAuthorUseCase = new GetQueueByAuthorUseCase();
    public static GetQueueByQueueIdUseCase getQueueByQueueIdUseCase = new GetQueueByQueueIdUseCase();
    public static CreateQueueDocumentUseCase createQueueDocumentUseCase = new CreateQueueDocumentUseCase();
    public static UploadBytesToFireStorageUseCase uploadBytesToFireStorageUseCase = new UploadBytesToFireStorageUseCase();
    public static UploadFileToFireStorageUseCase uploadFileToFireStorageUseCase = new UploadFileToFireStorageUseCase();
    public static GetQrCodeImageUseCase getQrCodeImageUseCase = new GetQrCodeImageUseCase();
    public static AddToParticipantsListUseCase addToParticipantsListUseCase = new AddToParticipantsListUseCase();
    public static SignInAnonymouslyUseCase signInAnonymouslyUseCase = new SignInAnonymouslyUseCase();
    public static CheckUserIdUseCase checkUserIdUseCase = new CheckUserIdUseCase();
    public static GetQrCodePdfUseCase getQrCodePdfUseCase = new GetQrCodePdfUseCase();
    public static GetParticipantsListUseCase getParticipantsListUseCase = new GetParticipantsListUseCase();
    public static AddQueueSizeModelSnapShot addQueueSizeModelSnapShot = new AddQueueSizeModelSnapShot();
    public static GetQueueByParticipantIdUseCase getQueueByParticipantIdUseCase = new GetQueueByParticipantIdUseCase();
    public static NextParticipantUseCase nextParticipantUseCase = new NextParticipantUseCase();
    public static RemoveParticipantById removeParticipantById = new RemoveParticipantById();
    public static OnContainParticipantUseCase onContainParticipantUseCase = new OnContainParticipantUseCase();
    public static OnParticipantLeftUseCase onParticipantLeftUseCase = new OnParticipantLeftUseCase();
}
